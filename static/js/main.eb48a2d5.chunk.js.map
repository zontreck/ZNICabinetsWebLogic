{"version":3,"sources":["AlertStore.js","SingleTimers.js","ZontreckDevNotificationChecks.js","Welcome.js","Administrators.jsx","App.js","reportWebVitals.js","index.js"],"names":["AlertStore","_alerts","item","this","push","id","find","d","inst","SingleTimers","_timers","_timerObjects","time","itemName","includes","setInterval","length","clearInterval","ZDevNotifierCheck","props","addToast","useToasts","unixTime","Math","floor","Date","now","instance","add","xhr","XMLHttpRequest","open","addEventListener","readyState","data","responseText","split","i","datas","console","log","Number","appearance","autoDismiss","autoDismissTimeout","send","Welcome","Card","style","top","left","position","Header","Body","Administrators","useState","match","params","CALLBACK","USER","width","height","App","className","PlacementType","particles","line_linked","shadow","enable","color","blur","background","value","fpsLimit","polygon","type","move","radius","autoPlay","interactivity","detectsOn","modes","attract","distance","duration","speed","bounce","connect","links","opacity","grab","blink","consent","light","area","gradient","start","stop","trail","delay","quantity","animation","sync","outModes","default","collisions","horizontal","random","minimumValue","vertical","mode","overlap","retries","destroy","count","rate","min","max","number","density","factor","limit","size","startValue","angle","offset","decay","direction","drift","gravity","acceleration","maxSpeed","path","clamp","bottom","right","straight","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb48a2d5.chunk.js","sourcesContent":["class AlertStore {\n  static inst = null;\n  _alerts = [];\n\n  static instance() {\n    if (AlertStore.inst == null) {\n      AlertStore.inst = new AlertStore();\n    }\n    return this.inst;\n  }\n\n  add(item) {\n    this._alerts.push(item);\n  }\n\n  get(id) {\n    return this._alerts.find((d) => d === id);\n  }\n}\n\nexport default AlertStore;\n","class SingleTimers {\n  static inst = null;\n  _timers = [];\n  _timerObjects = [];\n\n  static instance() {\n    if (SingleTimers.inst == null) {\n      SingleTimers.inst = new SingleTimers();\n    }\n    return this.inst;\n  }\n\n  add(item, time, itemName) {\n    if (!this._timerObjects.includes(itemName)) {\n      this._timers.push(setInterval(item, time));\n      this._timerObjects.push(itemName);\n      return this._timers.length;\n    }\n  }\n\n  clear(item) {\n    clearInterval(this._timers[item]);\n  }\n}\n\nexport default SingleTimers;\n","import React, { useState } from \"react\";\nimport { Breadcrumb, Card, Tabs, Tab, Modal, Button } from \"react-bootstrap\";\nimport { useToasts } from \"react-toast-notifications\";\nimport AlertStore from \"./AlertStore.js\";\nimport SingleTimers from \"./SingleTimers.js\";\n\nconst ZDevNotifierCheck = (props) => {\n  const { addToast } = useToasts();\n  const unixTime = () => {\n    return Math.floor(Date.now() / 1000);\n  };\n  const alerts = [];\n  const timerCode = () => {\n    // Query the server for any alerts\n    // Store the last checked time. If the server's alert has a timestamp greater than our current time, then the alert is valid. The alert must have a timestamp set in the future, which is effectively the timestamp for when the alert will expire.\n    var xhr = new XMLHttpRequest();\n    xhr.open(\n      \"GET\",\n      \"https://api.zontreck.dev/zni/CheckNotifications.php?currentTime=\" +\n        unixTime(),\n      false\n    );\n    xhr.addEventListener(\"load\", () => {\n      if (xhr.readyState === 4) {\n        var data = xhr.responseText.split(\";;\");\n        if (data[0] == \"CheckNotifications\") {\n          var i = 0;\n          for (i = 0; i < data.length; i++) {\n            var datas = data[i].split(\"~\");\n            if (!AlertStore.instance()._alerts.includes(datas[0])) {\n              if (unixTime() < Number(datas[1])) {\n                AlertStore.instance()._alerts.push(datas[0]);\n                console.log(\"Posting toast with provided parameters!\");\n                addToast(\"Alert posted at (\" + datas[4] + \"): \" + datas[0], {\n                  appearance: datas[2],\n                  autoDismiss: true,\n                  autoDismissTimeout: Number(datas[3]),\n                });\n              } else {\n                console.log(\n                  \"Number check error: \" + Number(datas[1]) + \"\\n\" + unixTime()\n                );\n              }\n            } else {\n              console.log(\"Already has alert\");\n            }\n          }\n        }\n      }\n    });\n    xhr.send();\n  };\n\n  SingleTimers.instance().add(timerCode, 5000, \"notification_checks\");\n\n  return null;\n};\n\nexport default ZDevNotifierCheck;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst Welcome = (props) => {\n  return (\n    <Card\n      style={{\n        top: \"25vh\",\n        left: \"25vw\",\n        position: \"absolute\",\n      }}\n    >\n      <Card.Header>Location Not Valid</Card.Header>\n      <Card.Body>\n        You must use the Cabinet systems in SL to use this site.\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Welcome;\n","import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst Administrators = (props) => {\n  const [downloaded, setDownloaded] = useState(false);\n  const CALLBACK = props.match.params.CALLBACK;\n  const USER = props.match.params.USER;\n\n  return (\n    <Card\n      style={{\n        position: \"absolute\",\n        top: \"25vh\",\n        left: \"25vw\",\n        width: \"50vw\",\n        height: \"50vh\",\n      }}\n    >\n      <Card.Header>Administrators Editor</Card.Header>\n      <Card.Body>Loading...</Card.Body>\n    </Card>\n  );\n};\n\nexport default Administrators;\n","import \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport { Card } from \"react-bootstrap\";\nimport ZDevNotifierCheck from \"./ZontreckDevNotificationChecks.js\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Welcome from \"./Welcome\";\nimport Administrators from \"./Administrators\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastProvider PlacementType=\"top-right\">\n        <ZDevNotifierCheck />\n      </ToastProvider>\n      <Particles\n        params={{\n          particles: {\n            line_linked: {\n              shadow: {\n                enable: true,\n                color: \"#3CA9D1\",\n                blur: 5,\n              },\n            },\n          },\n          background: {\n            color: {\n              value: \"#000000\",\n            },\n          },\n          fpsLimit: 60,\n          polygon: {\n            enable: true,\n            type: \"inside\",\n            move: {\n              radius: 100,\n            },\n          },\n          autoPlay: true,\n          interactivity: {\n            detectsOn: \"window\",\n            modes: {\n              attract: {\n                distance: 200,\n                duration: 1,\n                speed: 0.5,\n              },\n              bounce: {\n                distance: 200,\n              },\n              connect: {\n                distance: 80,\n                links: {\n                  opacity: 0.5,\n                },\n                radius: 60,\n              },\n              grab: {\n                distance: 100,\n                links: {\n                  blink: false,\n                  consent: false,\n                  opacity: 1,\n                },\n              },\n              light: {\n                area: {\n                  gradient: {\n                    start: {\n                      value: \"#FFFFFF\",\n                    },\n                    stop: {\n                      value: \"#000000\",\n                    },\n                  },\n                  radius: 1000,\n                },\n              },\n              trail: {\n                delay: 0.005,\n                quantity: 5,\n                particles: {\n                  color: {\n                    value: \"#FF0000\",\n                    animation: {\n                      enable: true,\n                      speed: 400,\n                      sync: true,\n                    },\n                  },\n                  move: {\n                    outModes: {\n                      default: \"destroy\",\n                    },\n                    speed: 2,\n                  },\n                },\n              },\n            },\n          },\n          particles: {\n            collisions: {\n              bounce: {\n                horizontal: {\n                  random: {\n                    enable: false,\n                    minimumValue: 0.1,\n                  },\n                  value: 1,\n                },\n                vertical: {\n                  random: {\n                    enable: false,\n                    minimumValue: 0.1,\n                  },\n                  value: 1,\n                },\n              },\n              enable: true,\n              mode: \"standard\",\n              overlap: {\n                enable: true,\n                retries: 0,\n              },\n            },\n            destroy: {\n              mode: \"split\",\n              split: {\n                count: 2,\n                rate: {\n                  random: {\n                    enable: true,\n                    minimumValue: 1,\n                  },\n                  value: {\n                    min: 1,\n                    max: 10,\n                  },\n                },\n              },\n            },\n            number: {\n              density: {\n                enable: true,\n                area: 800,\n                factor: 1000,\n              },\n              limit: 0,\n              value: 125,\n            },\n            size: {\n              random: {\n                enable: true,\n                minimumValue: 1,\n              },\n              value: {\n                min: 1,\n                max: 3,\n              },\n              animation: {\n                count: 0,\n                enable: true,\n                speed: 1,\n                sync: false,\n                destroy: \"none\",\n                minimumValue: 1,\n                startValue: \"random\",\n              },\n            },\n            move: {\n              angle: {\n                offset: 45,\n                value: 90,\n              },\n              decay: 0,\n              distance: 0,\n              direction: \"none\",\n              drift: 0,\n              enable: true,\n              gravity: {\n                acceleration: 9.81,\n                enable: false,\n                maxSpeed: 50,\n              },\n              path: {\n                clamp: true,\n                delay: {\n                  random: {\n                    enable: false,\n                    minimumValue: 0,\n                  },\n                  value: 0,\n                },\n                enable: false,\n              },\n              outModes: {\n                default: \"out\",\n                bottom: \"out\",\n                left: \"out\",\n                right: \"out\",\n                top: \"out\",\n              },\n              random: false,\n              size: false,\n              speed: 2,\n              straight: false,\n            },\n          },\n        }}\n        style={{\n          width: \"100vw\",\n          height: \"105vh\",\n        }}\n      />\n      <Switch>\n        <Route\n          path=\"/:USER/:CALLBACK/Admins\"\n          exact\n          render={(props) => {\n            return <Administrators {...props} />;\n          }}\n        />\n        <Route component={Welcome} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}