{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","params","particles","line_linked","shadow","enable","color","blur","polygon","type","move","radius","autoPlay","interactivity","detectsOn","events","onClick","collisions","bounce","horizontal","random","minimumValue","value","vertical","mode","overlap","retries","destroy","split","count","rate","min","max","style","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAqFeA,MAlFf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,OAAM,aACJC,UAAW,CACTC,YAAa,CACXC,OAAO,CACLC,QAAQ,EACRC,MAAO,UACPC,KAAM,KAIZC,QAAS,CACPH,QAAQ,EACRI,KAAM,SACNC,KAAK,CACHC,OAAQ,MAGZC,UAAU,EACVC,cAAe,CACbC,UAAW,SACXC,OAAO,CACLC,QAAS,CACPX,QAAO,MAtBT,YA0BM,CACRY,WAAW,CACTC,OAAO,CACLC,WAAW,CACTC,OAAO,CACLf,QAAQ,EACRgB,aAAc,IAEhBC,MAAM,GAERC,SAAS,CACPH,OAAO,CACLf,QAAO,EACPgB,aAAa,IAEfC,MAAM,IAGVjB,QAAO,EACPmB,KAAM,UACNC,QAAQ,CACNpB,QAAO,EACPqB,QAAQ,IAGZC,QAAQ,CACNH,KAAK,QACLI,MAAM,CACJC,MAAO,EACPC,KAAK,CACHV,OAAO,CACLf,QAAO,EACPgB,aAAa,GAEfC,MAAM,CACJS,IAAK,EACLC,IAAI,SAOhBC,MAAO,CACLC,MAAO,aCjEFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bdd7c7b0.chunk.js","sourcesContent":["import './App.css';\nimport Particles from \"react-particles-js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Particles\n        params={{\n          particles: {\n            line_linked: {\n              shadow:{\n                enable: true,\n                color: \"#3CA9D1\",\n                blur: 5\n              }\n            }\n          },\n          polygon: {\n            enable: true,\n            type: 'inside',\n            move:{\n              radius: 100\n            }\n          },\n          autoPlay: true,\n          interactivity: {\n            detectsOn: \"window\",\n            events:{\n              onClick: {\n                enable:true\n              }\n            }\n          },\n          particles:{\n            collisions:{\n              bounce:{\n                horizontal:{\n                  random:{\n                    enable: false,\n                    minimumValue: 0.1\n                  },\n                  value:1\n                },\n                vertical:{\n                  random:{\n                    enable:false,\n                    minimumValue:0.1\n                  },\n                  value:1\n                }\n              },\n              enable:true,\n              mode: \"destroy\",\n              overlap:{\n                enable:true,\n                retries:0\n              }\n            },\n            destroy:{\n              mode:'split',\n              split:{\n                count: 2,\n                rate:{\n                  random:{\n                    enable:true,\n                    minimumValue:1\n                  },\n                  value:{\n                    min: 1,\n                    max:10\n                  }\n                }\n              }\n            }\n          }\n        }}\n        style={{\n          width: '100%'\n        }}\n      \n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}